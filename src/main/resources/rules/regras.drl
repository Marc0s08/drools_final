import com.drools.sample.model.Fornecedor;
import java.util.List;

rule "Calcular pontuacao reputacao"
    when
        fornecedor : Fornecedor(reputacao > 0)
    then
        int pontosReputacao = fornecedor.getReputacao() * 10;
        fornecedor.setPontuacao(fornecedor.getPontuacao() + pontosReputacao);
        update(fornecedor) 
end

rule "Calcular pontuacao preco"
    when
        fornecedor : Fornecedor(preco > 0)
    then
        int pontosPreco = (int) (fornecedor.getPreco() / 500) * -10;
        fornecedor.setPontuacao(fornecedor.getPontuacao() + pontosPreco);
        update(fornecedor) 
end

rule "Calcular pontuacao condicao de pagamento"
    when
        fornecedor : Fornecedor(condicaoPgto == "À vista com desconto")
    then
        fornecedor.setPontuacao(fornecedor.getPontuacao() + 30);
        update(fornecedor) 
end

rule "Calcular pontuacao condicao de pagamento a vista"
    when
        fornecedor : Fornecedor(condicaoPgto == "A vista")
    then
        fornecedor.setPontuacao(fornecedor.getPontuacao() + 20);
        update(fornecedor) 
end

rule "Calcular pontuacao condicao de pagamento parcelado"
    when
        fornecedor : Fornecedor(condicaoPgto.startsWith("Parcelado"))
    then
        fornecedor.setPontuacao(fornecedor.getPontuacao() + 10);
        update(fornecedor) 
end

rule "Calcular pontuacao frete"
    when
        fornecedor : Fornecedor(frete > 0)
    then
        int pontosFrete = (fornecedor.getFrete() / 30) * -10;
        fornecedor.setPontuacao(fornecedor.getPontuacao() + pontosFrete);
        update(fornecedor) 
end

rule "Exibir fornecedores com pontuação acima de 50"
    when
        fornecedor : Fornecedor(pontuacao >= 50)
    then
        fornecedor.setMensagem("Aprovado");
        update(fornecedor) 
end